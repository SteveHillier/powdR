% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multi_xrd_align.R
\name{multi.xrd.align}
\alias{multi.xrd.align}
\title{Align and harmonise multiple XRPD patterns}
\usage{
multi.xrd.align(xrd, xrd.standard, xmin, xmax, xshift)
}
\arguments{
\item{xrd}{a list XRPD dataframes (2theta and counts)}

\item{xrd.standard}{a dataframe of the chosen standard that each
sample is aligned to (2theta and counts)}

\item{xmin}{the minimum 2theta value used during alignment}

\item{xmax}{the maximum 2theta value used during alignment}

\item{xshift}{the maximum (positive and negative) 2theta shift
that is allowed during alignment}
}
\value{
a list of aligned and harmonised XRPD data
}
\description{
\code{multi.xrd.align} takes a list of XRPD data and aligns them
relative to a chosen standard. It uses an optimisation routine that
computes a suitable linear shift. After all samples have been aligned,
the function harmonises the data to a single 2theta scale.
}
\examples{
# Load soils xrd data
data(soils)

#Load minerals library
data(minerals)

#Create a standard quartz pattern to align to
quartz <- data.frame(tth = minerals$tth,
                     counts = minerals$xrd$QUARTZ.STRATH.P.1142250)

#Plot the main quartz peak prior to alignment (scale the counts using rng.nm)
plot(x = soils$sandstone$tth, y = rng.nm(soils$sandstone$counts),
     xlim = c(26, 27), type = "l")
lines(x = soils$granite$tth, y = rng.nm(soils$granite$counts), col = "red")
lines(x = soils$limestone$tth, y = rng.nm(soils$limestone$counts), col = "green")
lines(x = quartz$tth, y = rng.nm(quartz$counts), col = "blue")

#align data
aligned <- multi.xrd.align(xrd = soils, xrd.standard = quartz, xmin = 10,
                           xmax = 60, xshift = 0.2)
#replot data
plot(x = aligned$sandstone$tth, y = rng.nm(aligned$sandstone$counts),
     xlim = c(26, 27), type = "l")
lines(x = aligned$granite$tth, y = rng.nm(aligned$granite$counts), col = "red")
lines(x = aligned$limestone$tth, y = rng.nm(aligned$limestone$counts), col = "green")
lines(x = quartz$tth, y = rng.nm(quartz$counts), col = "blue")
}
